# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
test-results/
junit/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
docs/_static/
docs/_templates/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock
poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env.local
.env.*.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# IDE / Editor specific files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
.project
.pydevproject
.settings/
.classpath

# Operating System Files
Thumbs.db
Desktop.ini

# Project specific
logs/
*.log
*.log.*
laser_api/logs/
test_*.log

# Configuration files with secrets
config.local.py
secrets.json
*.key
*.pem

# Database
*.db
*.sqlite
*.sqlite3

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old

# Documentation PDFs and resources
LDM302_Release002_Rev002_EN (2).pdf
*.pdf

# Test outputs
test_output/
test_results/
*.test

# Claude/AI assistant files
.claude/
*.claude

# Local development
.local/
local/

# Performance profiling
*.prof
*.lprof

# Coverage reports
.coverage.*
coverage/
htmlcov/

# pytest
.pytest_cache/
pytest_cache/

# FastAPI specific
.fastapi_cache/

# Asyncio debug
*.pyc.*.cover

# Windows specific
*.dll
*.exe

# MacOS specific
.DS_Store
.AppleDouble
.LSOverride

# Linux specific
.directory

# Project build artifacts
build/
dist/
*.egg-info/

# Package manager files
pip-wheel-metadata/

# Virtual environments
bin/
include/
lib/
lib64/
pyvenv.cfg
share/

# Ignore all .env files except .env.example
.env*
!.env.example

# Ignore sensitive laser device data
device_data/
measurement_data/
calibration_data/
simulator_logs/

# Project-specific log directories
logs/api/
logs/device/
logs/measurements/
logs/commands/

# Deployment files
docker-compose.override.yml
docker-compose.prod.yml
kubernetes/
k8s/

