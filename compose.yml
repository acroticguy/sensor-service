services:
  # Service 1: The Lidar Service
  # It needs full network access for device discovery on random LAN ports.
  lidar-service:
    # 'build.context' tells Docker to look in the './lidar-service' directory
    # for the Dockerfile and other files to build the image.
    build:
      context: ./lidar-service
    container_name: lidar-service
    
    # CRITICAL: This gives the container direct access to the host's network.
    # It can see all devices on the LAN, just like any other app on the host.
    network_mode: "host"
    
    # Loads environment variables from a file within its directory.
    env_file:
      - ./lidar-service/.env
      
    # Environment variables set directly for clarity.
    environment:
      # It connects to the laser-service via localhost because the laser-service's
      # port (8080) is published directly to the host machine.
      - LASER_SERVICE_URL=http://localhost:8080
      
      # NOTE: The PORT variable (8001) is set inside the lidar-service's Dockerfile/CMD.
      # If you needed to override it, you would do it here.
      
    volumes:
      - ./lidar-service:/app
    restart: unless-stopped

  # Service 2: The Laser Service
  # It can be isolated on a private network for better security and to avoid port conflicts.
  laser-service:
    build:
      context: ./laser-service
    container_name: laser-service
    
    # This connects the service to our custom-defined bridge network.
    networks:
      - services-network
      
    # CRITICAL: This adds a DNS entry for 'host.docker.internal' inside the container,
    # which resolves to the host machine's IP address. This is how it can reach the
    # lidar-service (which is on the host network).
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
    # This publishes the container's port to the host's port.
    # Format is "HOST_PORT:CONTAINER_PORT".
    # Using a default of 8080 to avoid conflicts with Portainer.
    ports:
      - "${API_PORT:-8080}:${API_PORT:-8080}"
      
    env_file:
      - ./laser-service/.env
      
    environment:
      # This ensures the application inside the container listens on the correct port.
      - API_PORT=${API_PORT:-8080}
      
      # This is the URL it will use to send requests back to the lidar-service.
      - LIDAR_SERVICE_URL=http://host.docker.internal:8001
      
    volumes:
      - ./laser-service/logs:/app/logs
    restart: unless-stopped

# Define the private network for the isolated services.
networks:
  services-network:
    driver: bridge